# https://taskfile.org

version: '2'

vars:
  USERNAME: emzian7
  IMAGE: sample-app
  APP: "github.com/ishansd94/sample-app"
  EXECUTABLE: "sample"
  SSH_PRIVATE_KEY: $(cat ~/.ssh/id_rsa)

  RELEASE: v0.0.1
  COMMIT: $(git rev-parse --short HEAD)
  BUILDTIME: $(date -u '+%Y-%m-%d_%H:%M:%S')

tasks:

  proto:
    cmds:
#      - protoc --proto_path=./internal/app/sample/proto --proto_path=third_party --go_out=./internal/app/sample/proto --go-grpc_out=./internal/app/sample/proto sample.proto
       - protoc --proto_path=./internal/app/sample/proto --proto_path=third_party --go_out=./internal/app/sample/proto  sample.proto

  install:
    cmds:
      - dep ensure
    desc: Install the dependencies.

  run:
    cmds:
      - go run cmd/{{.EXECUTABLE}}/main.go
    desc: Run the application.

  build:
    cmds:
      - |
        DOCKER_BUILDKIT=0 docker build \
        -f build/Dockerfile \
        -t {{.USERNAME}}/{{.IMAGE}}:{{.COMMIT}} \
        --build-arg APP={{.APP}} \
        --build-arg EXECUTABLE={{.EXECUTABLE}} \
        --build-arg SSH_PRIVATE_KEY="{{.SSH_PRIVATE_KEY}}" \
        --build-arg RELEASE={{.RELEASE}} \
        --build-arg COMMIT={{.COMMIT}} \
        --build-arg BUILDTIME={{.BUILDTIME}} \
        .
    desc: Build the application into a docker image.

  tag:
    cmds:
      - docker tag {{.USERNAME}}/{{.IMAGE}}:{{.COMMIT}} {{.USERNAME}}/{{.IMAGE}}:{{.RELEASE}}
      - docker tag {{.USERNAME}}/{{.IMAGE}}:{{.COMMIT}} {{.USERNAME}}/{{.IMAGE}}:latest

  test:
    cmds:
      - |
        DOCKER_BUILDKIT=0 docker build \
        -f build/Test.Dockerfile \
        -t {{.IMAGE}}:{{.COMMIT}}-testing \
        .
      - docker run {{.IMAGE}}:{{.COMMIT}}-testing go test ./... -v -cover -race

  testlocal:
    cmds:
      - go test ./... -v -cover -race
    desc: Run the unit tests

  push:
    cmds:
      - task: tag
      - docker push {{.USERNAME}}/{{.IMAGE}}:{{.RELEASE}}
      - docker push {{.USERNAME}}/{{.IMAGE}}
    desc: Build the docker image and push the image to docker hub.